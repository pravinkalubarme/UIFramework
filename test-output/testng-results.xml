<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="381" started-at="2020-04-13T11:35:35 IST" finished-at="2020-04-13T11:35:36 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="381" started-at="2020-04-13T11:35:35 IST" finished-at="2020-04-13T11:35:36 IST">
      <class name="com.uiFramework.Inn.Marsh.testScript.Test1">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.uiFramework.Inn.Marsh.testScript.Test1@67205a84]" name="beforeSuite" is-config="true" duration-ms="94" started-at="2020-04-13T11:35:35 IST" finished-at="2020-04-13T11:35:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.uiFramework.Inn.Marsh.testScript.Test1@67205a84]" name="beforeClass" is-config="true" duration-ms="2" started-at="2020-04-13T11:35:35 IST" finished-at="2020-04-13T11:35:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFramework.Inn.Marsh.testScript.Test1@67205a84]" name="beforeMethod" is-config="true" duration-ms="7" started-at="2020-04-13T11:35:36 IST" finished-at="2020-04-13T11:35:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFramework.Inn.Marsh.testScript.Test1.TC1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TC1()[pri:0, instance:com.uiFramework.Inn.Marsh.testScript.Test1@67205a84]" name="TC1" duration-ms="26" started-at="2020-04-13T11:35:36 IST" finished-at="2020-04-13T11:35:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC1 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFramework.Inn.Marsh.testScript.Test1@67205a84]" name="afterMethod" is-config="true" duration-ms="232" started-at="2020-04-13T11:35:36 IST" finished-at="2020-04-13T11:35:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC1 status=SUCCESS method=Test1.TC1()[pri:0, instance:com.uiFramework.Inn.Marsh.testScript.Test1@67205a84] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFramework.Inn.Marsh.testScript.Test1@67205a84]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-04-13T11:35:36 IST" finished-at="2020-04-13T11:35:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFramework.Inn.Marsh.testScript.Test1.TC2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="TC2()[pri:0, instance:com.uiFramework.Inn.Marsh.testScript.Test1@67205a84]" name="TC2" duration-ms="2" started-at="2020-04-13T11:35:36 IST" finished-at="2020-04-13T11:35:36 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.uiFramework.Inn.Marsh.helper.assertionHelper.AssertionHelper.makeFalse(AssertionHelper.java:28)
at com.uiFramework.Inn.Marsh.testScript.Test1.TC2(Test1.java:18)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC2 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFramework.Inn.Marsh.testScript.Test1@67205a84]" name="afterMethod" is-config="true" duration-ms="51" started-at="2020-04-13T11:35:36 IST" finished-at="2020-04-13T11:35:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC2 status=FAILURE method=Test1.TC2()[pri:0, instance:com.uiFramework.Inn.Marsh.testScript.Test1@67205a84] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFramework.Inn.Marsh.testScript.Test1@67205a84]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-04-13T11:35:36 IST" finished-at="2020-04-13T11:35:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFramework.Inn.Marsh.testScript.Test1.TC3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TC3()[pri:0, instance:com.uiFramework.Inn.Marsh.testScript.Test1@67205a84]" name="TC3" duration-ms="1" started-at="2020-04-13T11:35:36 IST" finished-at="2020-04-13T11:35:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC3 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFramework.Inn.Marsh.testScript.Test1@67205a84]" name="afterMethod" is-config="true" duration-ms="30" started-at="2020-04-13T11:35:36 IST" finished-at="2020-04-13T11:35:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC3 status=SUCCESS method=Test1.TC3()[pri:0, instance:com.uiFramework.Inn.Marsh.testScript.Test1@67205a84] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.uiFramework.Inn.Marsh.testScript.Test1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
